==105== Memcheck, a memory error detector
==105== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==105== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==105== Command: ./a.out
==105==
==105== error calling PR_SET_PTRACER, vgdb might block
Creating new queue
Adding A to queue
==105== Conditional jump or move depends on uninitialised value(s)
==105==    at 0x1096C1: queue_add (queue.c:20)
==105==    by 0x1092A4: main (test_queue_simple.c:22)
==105==
Peeking queue
Adding B to queue
Polling queue
Polling queue
Peeking queue (should be empty)
==105== Invalid read of size 8
==105==    at 0x109806: queue_peek (queue.c:82)
==105==    by 0x1095B7: main (test_queue_simple.c:80)
==105==  Address 0x4a4a0d0 is 0 bytes inside a block of size 16 free'd
==105==    at 0x483CA3F: free (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)       
==105==    by 0x10977E: queue_poll (queue.c:55)
==105==    by 0x10943B: main (test_queue_simple.c:54)
==105==  Block was alloc'd at
==105==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)     
==105==    by 0x10979A: new_queue (queue.c:62)
==105==    by 0x109250: main (test_queue_simple.c:15)
==105==
==105== Invalid read of size 8
==105==    at 0x109811: queue_peek (queue.c:83)
==105==    by 0x1095B7: main (test_queue_simple.c:80)
==105==  Address 0x4a4a0d0 is 0 bytes inside a block of size 16 free'd
==105==    at 0x483CA3F: free (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)       
==105==    by 0x10977E: queue_poll (queue.c:55)
==105==    by 0x10943B: main (test_queue_simple.c:54)
==105==  Block was alloc'd at
==105==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)     
==105==    by 0x10979A: new_queue (queue.c:62)
==105==    by 0x109250: main (test_queue_simple.c:15)
==105==
==105== Invalid read of size 8
==105==    at 0x10983A: queue_peek (queue.c:90)
==105==    by 0x1095B7: main (test_queue_simple.c:80)
==105==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==105==
==105==
==105== Process terminating with default action of signal 11 (SIGSEGV)
==105==  Access not within mapped region at address 0x0
==105==    at 0x10983A: queue_peek (queue.c:90)
==105==    by 0x1095B7: main (test_queue_simple.c:80)
==105==  If you believe this happened as a result of a stack
==105==  overflow in your program's main thread (unlikely but
==105==  possible), you can try to increase the size of the
==105==  main thread stack using the --main-stacksize= flag.
==105==  The main thread stack size used in this run was 8388608.
==105== 
==105== HEAP SUMMARY:
==105==     in use at exit: 18 bytes in 3 blocks
==105==   total heap usage: 6 allocs, 3 frees, 4,146 bytes allocated
==105==
==105== 16 bytes in 1 blocks are definitely lost in loss record 3 of 3
==105==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)     
==105==    by 0x10969B: queue_add (queue.c:15)
==105==    by 0x1092A4: main (test_queue_simple.c:22)
==105==
==105== LEAK SUMMARY:
==105==    definitely lost: 16 bytes in 1 blocks
==105==    indirectly lost: 0 bytes in 0 blocks
==105==      possibly lost: 0 bytes in 0 blocks
==105==    still reachable: 2 bytes in 2 blocks
==105==         suppressed: 0 bytes in 0 blocks
==105== Reachable blocks (those to which a pointer was found) are not shown.
==105== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==105==
==105== Use --track-origins=yes to see where uninitialised values come from
==105== For lists of detected and suppressed errors, rerun with: -s
==105== ERROR SUMMARY: 5 errors from 5 contexts (suppressed: 0 from 0)
Segmentation fault (core dumped)